name: Build arm64

on:
  push

concurrency:
  group: build-arm64-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  DOCKERHUB_NAMESPACE: closeio
  PROJECT: sync-engine
  python_version: "3.8"
  arch: arm64

jobs:
  build-arm64:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare environment
        run: |
          echo "DOCKER_IMAGE_TAG=${{ env.DOCKERHUB_NAMESPACE }}/${{ env.PROJECT }}:${{ github.sha }}-${{ env.arch }}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker context for Buildx
        id: buildx-context
        run: |
          docker context create container-builder

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          endpoint: container-builder

      - name: Login to DockerHub
        # if: ${{ github.ref == 'master' && github.event.pull_request.merged == true }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push sync-engine images
        uses: docker/build-push-action@v5
        with:
          platforms: linux/${{ env.arch }}
          push: false
          load: true
          build-args:
            PYTHON_VERSION=${{ env.python_version }}
          tags: ${{ env.DOCKER_IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Push image
        if: ${{ matrix.dockerhub_push }}
        run: |
          docker push ${{ env.DOCKER_IMAGE_TAG }}

  multi-arch-manifest:
    needs:
      - build-arm64

    runs-on: ubuntu-20.04
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Because the arm64 builds are so much slower, we assume they will just 
      # be appended to the existing manifest created by `build-and-release.yaml`.
      - name: Create manifest
        run: |
          DOCKER_IMAGE_TAG=${{ env.DOCKERHUB_NAMESPACE }}/${{ env.PROJECT }}:${{ github.sha }}
          docker buildx imagetools create --append \
            -t ${{ env.DOCKER_IMAGE_TAG }} \
            ${{ env.DOCKER_IMAGE_TAG }}-arm64