name: Build and Release

on:
  push:
    branches:
      - '*'

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  DOCKERHUB_NAMESPACE: closeio
  PROJECT: sync-engine

jobs:
  static-code-analysis:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --no-deps -r requirements/lint.txt

      - name: Run Black
        run: black --check .

      - name: Run isort
        run: isort -c .

      - name: Run flake8
        run: flake8


  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        include:
          - arch: amd64
            run_tests: true
          
          # The qemu arm64 builds are *very* slow so they are split out into 
          # their own workflow

          # - arch: arm64
          #   run_tests: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare environment
        run: |
          if [ "$(git log -1 --pretty=%B | head -n 1 | grep '#notests')" ]; then
            echo 'SKIP_TESTS="1"' >> $GITHUB_ENV
          fi
          echo "DOCKER_IMAGE_TAG=${{ env.DOCKERHUB_NAMESPACE }}/${{ env.PROJECT }}:${{ github.sha }}-${{ matrix.arch }}" >> $GITHUB_ENV
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker context for Buildx
        id: buildx-context
        run: |
          docker context create container-builder

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          endpoint: container-builder

      - name: Login to DockerHub
        # if: ${{ github.ref == 'master' && github.event.pull_request.merged == true }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push sync-engine images
        uses: docker/build-push-action@v5
        with:
          platforms: linux/${{ matrix.arch }}
          push: false
          load: true
          tags: |
            ${{ env.DOCKER_IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests
        run: |
          docker tag ${{ env.DOCKER_IMAGE_TAG }} ${{ env.PROJECT }}_app
          if [[ -z $SKIP_TESTS ]]; then
            docker-compose run app bash -ec '
              bin/wait-for-it.sh mysql:3306 \
              && NYLAS_ENV=test pytest --cov-report= --cov=inbox tests/ \
              && coverage html -d pythoncov
            '
          else
            echo Skipping tests
          fi

      - name: Push image
        run: |
          docker push ${{ env.DOCKER_IMAGE_TAG }}
