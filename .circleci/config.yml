version: 2.1
jobs:
  static-code-analysis:
    docker:
      - image: circleci/python:3.7
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    working_directory: ~/code
    steps:
      - checkout

      - run:
          name: Prepare Environment
          command: |
            sudo -E pip install --no-deps -r requirements_lint.txt

      - run:
          name: black
          when: always
          command: black --check .

      - run:
          name: isort
          when: always
          command: isort -c .
        
  static-code-analysis-flake8:
    docker:
      - image: circleci/python:2.7
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    working_directory: ~/code
    steps:
      - checkout

      - run:
          name: Prepare Environment
          command: |
            sudo -E pip install flake8==3.9.2

      - run:
          name: flake8
          command: flake8

  build:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/sync-engine

    steps:
      - checkout

      - run:
          name: build sync-engine image
          command: docker-compose build app

      - run:
          name: run tests
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker-compose run app bash -ec '
              pip install -e . \
              && bin/wait-for-it.sh mysql:3306 \
              && NYLAS_ENV=test pytest --cov-report= --cov=inbox tests/ \
              && coverage html -d pythoncov
            '

      - run:
          name: Push the tested image to docker hub
          environment:
            PROJECT: sync-engine
            PROJECT_NAMESPACE: closeio
          command: |
            PROJECT_VSN="$CIRCLE_BRANCH"
            PROJECT_SHA="$CIRCLE_SHA1"
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            # tag and push both sync-engine:master and sync-engine:<sha1>
            docker tag "${PROJECT}_app" "${PROJECT_NAMESPACE}/${PROJECT}:branch-${PROJECT_VSN}"
            docker tag "${PROJECT}_app" "${PROJECT_NAMESPACE}/${PROJECT}:${PROJECT_SHA}"
            docker push "${PROJECT_NAMESPACE}/${PROJECT}:branch-${PROJECT_VSN}"
            docker push "${PROJECT_NAMESPACE}/${PROJECT}:${PROJECT_SHA}"

      - store_artifacts:
          path: pythoncov

      - store_artifacts:
          path: .circleci/artifacts.html
          destination: artifacts.html

  build-python3.6:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/sync-engine

    steps:
      - checkout

      - run:
          name: build sync-engine image
          command: docker-compose build --build-arg PYTHON_VERSION=3.6 app

      - run:
          name: run tests
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker-compose run app bash -ec '
              pip install -e . \
              && bin/wait-for-it.sh mysql:3306 \
              && NYLAS_ENV=test pytest --cov-report= --cov=inbox tests/ \
              && coverage html -d pythoncov
            '
      # Not pushing Python 3.6 image of the time being

  build-python3.8:
    machine:
      image: ubuntu-1604:201903-01 
    working_directory: ~/sync-engine

    steps:
      - checkout

      - run:
          name: build sync-engine image
          command: docker-compose build --build-arg PYTHON_VERSION=3.8 app

      - run:
          name: run tests
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker-compose run app bash -ec '
              pip install -e . \
              && bin/wait-for-it.sh mysql:3306 \
              && NYLAS_ENV=test pytest --cov-report= --cov=inbox tests/ \
              && coverage html -d pythoncov
            '

      # Not pushing Python 3.8 image of the time being

  build_arm:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    working_directory: ~/sync-engine

    steps:
      - checkout

      - run:
          name: build sync-engine image
          command: docker-compose build app

      # Not running tests for arm.
      # mysql:5.7.31 has no arm image (arm images start at version 8)

      - run:
          name: Push the tested image to docker hub
          environment:
            PROJECT: sync-engine
            PROJECT_NAMESPACE: closeio
          command: |
            PROJECT_VSN="$CIRCLE_BRANCH"
            PROJECT_SHA="$CIRCLE_SHA1"
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            # tag and push both sync-engine:master and sync-engine:<sha1>
            docker tag "${PROJECT}_app" "${PROJECT_NAMESPACE}/${PROJECT}:branch-${PROJECT_VSN}-arm64"
            docker tag "${PROJECT}_app" "${PROJECT_NAMESPACE}/${PROJECT}:${PROJECT_SHA}-arm64"
            docker push "${PROJECT_NAMESPACE}/${PROJECT}:branch-${PROJECT_VSN}-arm64"
            docker push "${PROJECT_NAMESPACE}/${PROJECT}:${PROJECT_SHA}-arm64"

workflows:
  version: 2
  workflow:
    jobs:
      - static-code-analysis
      - static-code-analysis-flake8
      - build
      - build_arm
