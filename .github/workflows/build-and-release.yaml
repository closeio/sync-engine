name: Build and Release

on:
  push:
    branches:
      - '*'

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  DOCKERHUB_NAMESPACE: closeio
  PROJECT: sync-engine

jobs:
  static-code-analysis:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Black
        run: uv run black --check .

      - name: Ruff
        run: uv run ruff check --no-cache --output-format github .

      - name: Mypy
        run: uv run mypy

  check-locked-requirements:
    runs-on: ubuntu-24.04
    if: ${{ !contains(github.event.head_commit.message, '#notests') }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Update lockfile
        run: uv sync

      - name: Check If Output Matches Committed
        run: |
          DIFF="$(git diff)"
          if [ "$DIFF" ]; then
            echo "Lockfile differs from committed lockfile!"
            echo "$DIFF"
            exit 1
          fi

  build:
    runs-on: ${{ matrix.runs-on }}

    strategy:
      matrix:
        include:
          - arch: amd64
            runs-on: ubuntu-24.04
          - arch: arm64
            runs-on: gh-arm64-runners

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare environment
        run: |
          if [ "$(git log -1 --pretty=%B | head -n 1 | grep '#notests')" ]; then
            echo 'SKIP_TESTS="1"' >> $GITHUB_ENV
          fi
          DOCKER_IMAGE_TAG=${{ env.DOCKERHUB_NAMESPACE }}/${{ env.PROJECT }}:${{ github.sha }}
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            DOCKER_IMAGE_TAG="${DOCKER_IMAGE_TAG}-arm64"
          fi
          echo "DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG}" >> $GITHUB_ENV
        shell: bash

      - name: Set up Docker context for Buildx
        id: buildx-context
        run: |
          docker context create container-builder

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          endpoint: container-builder

      - name: Login to DockerHub
        # if: ${{ github.ref == 'master' && github.event.pull_request.merged == true }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push sync-engine images
        uses: docker/build-push-action@v5
        with:
          platforms: linux/${{ matrix.arch }}
          push: false
          load: true
          tags: |
            ${{ env.DOCKER_IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests
        run: |
          docker tag ${{ env.DOCKER_IMAGE_TAG }} ${{ env.PROJECT }}_app
          if [[ -z $SKIP_TESTS ]]; then
          docker compose run test uv run pytest --cov-report=html:pythoncov --cov=inbox
          else
            echo Skipping tests
          fi
        if: ${{ matrix.arch == 'amd64' }}

      - name: Push image
        run: |
          docker push ${{ env.DOCKER_IMAGE_TAG }}
